<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EMO_Cloud</name>
    </assembly>
    <members>
        <member name="M:EMO_Cloud.Controllers.AlbumsController.GetAlbum">
            <summary>
            获取所有专辑
            </summary>
            <remarks>
            GET: api/Albums
            
            需要管理员及以上权限
            </remarks>
            <returns>所有专辑</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.AlbumsController.GetAlbum(System.Int64)">
            <summary>
            获取专辑信息
            </summary>
            <remarks>
            GET: api/Albums/5
            
            允许匿名访问
            </remarks>
            <param name="id">专辑ID</param>
            <returns>专辑信息</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.AlbumsController.PutAlbum(System.Int64,EMO_Cloud.Models.Album)">
            <summary>
            修改指定ID的专辑信息
            </summary>
            <remarks>
            PUT: api/Albums/5
            
            需要管理员及以上权限
            
            JSON形式传输
            </remarks>
            <param name="id">专辑ID</param>
            <param name="album">专辑对象</param>
            <returns></returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.AlbumsController.PostAlbum(EMO_Cloud.Models.Album)">
            <summary>
            增加专辑
            </summary>
            <remarks>
            POST: api/Albums
            
            需要管理员及以上权限
            
            JSON形式传输
            </remarks>
            <param name="album">专辑对象</param>
            <returns></returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.AlbumsController.DeleteAlbum(System.Int64)">
             <summary>
             删除专辑
             </summary>
             <remarks>
             DELETE: api/Albums/5
             
             需要管理员及以上权限
            
             若成功返回204
             </remarks>
             <param name="id">专辑ID</param>
             <returns>若成功返回204</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.ArtistsController.GetArtist">
            <summary>
            获取所有歌手列表
            </summary>
            <remarks>
            GET: api/Artists
            
            需要管理员及以上权限
            </remarks>
            <returns>所有歌手列表</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.ArtistsController.GetArtist(System.Int64)">
            <summary>
            获取指定ID的歌手信息
            </summary>
            <remarks>
            GET: api/Artists/5
            
            允许匿名访问
            </remarks>
            <param name="id">歌手ID</param>
            <returns>歌手信息</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.ArtistsController.PutArtist(System.Int64,EMO_Cloud.Models.Artist)">
            <summary>
            修改指定ID的歌手信息
            </summary>
            <remarks>
            PUT: api/Artists/5
            
            需要管理员及以上权限
            
            JSON形式传输
            </remarks>
            <param name="id">歌手ID</param>
            <param name="artist">歌手对象</param>
            <returns></returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.ArtistsController.PostArtist(EMO_Cloud.Models.Artist)">
            <summary>
            添加歌手
            </summary>
            <remarks>
            POST: api/Artists
            
            需要管理员及以上权限
            
            JSON形式传输
            
            返回歌手信息
            </remarks>
            <param name="artist">歌手对象</param>
            <returns>歌手信息</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.ArtistsController.Songs(System.Int64)">
            <summary>
            获取歌手所演唱的歌曲列表
            </summary>
            POST: api/Artists/Songs
            
            允许匿名访问
            
            FormData形式传输
            
            返回含有歌曲名称(Item1)和歌曲ID(Item2)的元组
            <param name="artistId">歌手ID</param>
            <returns>返回含有歌曲名称(Item1)和歌曲ID(Item2)的元组</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.ArtistsController.DeleteArtist(System.Int64)">
            <summary>
            删除歌手
            </summary>
            <remarks>
            DELETE: api/Artists/5
            
            需要管理员及以上权限
            
            若成功返回204
            </remarks>
            <param name="id">歌手ID</param>
            <returns>若成功返回204</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.PlayListsController.GetPlayList">
            <summary>
            获取所有歌曲列表
            </summary>
            <remarks>
            GET: api/PlayLists
            
            需要管理员及以上权限
            </remarks>
            <returns>所有歌曲列表</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.PlayListsController.GetPlayList(System.Int64)">
            <summary>
            获取指定ID的播放列表
            </summary>
            <remarks>
            GET: api/PlayLists/5
            
            允许匿名访问
            </remarks>
            <param name="id">歌曲列表ID</param>
            <returns>歌曲列表</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.PlayListsController.AddSong(System.Int64,System.Int64)">
            <summary>
            向歌单添加歌曲
            </summary>
            <remarks>
            POST: api/PlayLists/AddSong
            
            FormData形式传输
            </remarks>
            <param name="playlistId">歌单ID</param>
            <param name="songId">歌曲ID</param>
            <returns></returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.PlayListsController.RemoveSong(System.Int64,System.Int64)">
            <summary>
            从歌单删除歌曲
            </summary>
            <remarks>
            POST: api/PlayLists/RemoveSong
            
            FormData形式传输
            </remarks>
            <param name="playlistId">歌单ID</param>
            <param name="songId">歌曲ID</param>
            <returns></returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.PlayListsController.PostPlayList(EMO_Cloud.Models.PlayList)">
            <summary>
            增加歌单
            </summary>
            <remarks>
            POST: api/PlayLists
            
            需要管理员及以上权限
            
            JSON形式传输
            </remarks>
            <param name="playList">歌单</param>
            <returns>歌单信息</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.PlayListsController.DeletePlayList(System.Int64)">
            <summary>
            删除歌单
            </summary>
            <remarks>
            DELETE: api/PlayLists/5
            
            需要管理员及以上权限
            
            若成功返回204
            </remarks>
            <param name="id">歌单ID</param>
            <returns>若成功返回204</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.PlayListsController.GetUserId">
            <summary>
            copy from: https://stackoverflow.com/questions/50580232/get-userid-from-jwt-on-all-controller-methods
            </summary>
            <returns>当前Token的用户ID</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.SongsController.GetSong">
            <summary>
            获取所有歌曲列表
            </summary>
            <remarks>
            GET: api/Songs
            
            允许匿名访问
            </remarks>
            <returns>所有歌曲列表</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.SongsController.GetSong(System.Int64)">
            <summary>
            获取歌曲信息
            </summary>
            <remarks>
            GET: api/Songs/5
            
            允许匿名访问
            </remarks>
            <param name="id">歌曲ID</param>
            <returns>歌曲信息</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.SongsController.Top(System.Int32)">
            <summary>
            点击量最高的歌曲列表
            </summary>
            <remarks>
            GET: api/Songs/Top/5
            
            允许匿名访问
            </remarks>
            <param name="size">列表长度</param>
            <returns>歌曲列表, 长度超过曲库大小时只返回曲库</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.SongsController.Artists(System.Int64)">
            <summary>
            指定ID的歌曲的歌手列表
            </summary>
            <remarks>
            GET: api/Songs/Artist/5
            
            允许匿名访问
            </remarks>
            <param name="songId">歌曲ID</param>
            <returns>歌手</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.SongsController.PostSong(EMO_Cloud.Models.Song)">
            <summary>
            添加歌曲
            </summary>
            <remarks>
            POST: api/Songs/AddSong
            
            需要管理员及以上权限
            
            JSON形式传输
            </remarks>
            <param name="song">歌曲对象</param>
            <returns></returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.SongsController.Search(System.String)">
            <summary>
            搜索歌曲
            </summary>
            <remarks>
            POST: api/Songs/Search
            
            允许匿名访问
            
            FormData形式传输
            </remarks>
            <param name="keywords">关键词</param>
            <returns>歌曲列表</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.SongsController.DeleteSong(System.Int64)">
            <summary>
            删除指定ID的歌曲
            </summary>
            <remarks>
            DELETE: api/Songs/5
            
            需要管理员及以上权限
            
            若成功返回204
            </remarks>
            <param name="id">歌曲ID</param>
            <returns>若成功返回204</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.SongsController.Albums(System.Int64)">
            <summary>
            指定ID歌曲所属专辑
            </summary>
            <remarks>
            GET: api/Songs/Albums/5
            
            允许匿名访问
            
            返回含有专辑名称(Item1)和专辑ID(Item2)的元组
            </remarks>
            <param name="songId">歌曲ID</param>
            <returns>返回含有专辑名称和专辑ID的元组</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.SongsController.GetUserId">
            <summary>
            copy from: https://stackoverflow.com/questions/50580232/get-userid-from-jwt-on-all-controller-methods
            </summary>
            <returns>当前Token的用户ID</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.TokenController.PostUser(System.String,System.String)">
            <summary>
            获取Token
            </summary>
            <remarks>
            POST: api/Token
            
            FormData形式传输
            </remarks>
            <param name="email">邮箱地址</param>
            <param name="password">密码</param>
            <returns>若成功响应201并返回Token, 若失败响应400</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.TokenController.GetUser(System.String,System.String)">
            <summary>
            根据邮箱和密码查找用户
            </summary>
            <param name="email">用户邮箱地址</param>
            <param name="password">加盐哈希后的用户密码</param>
            <returns>查找结果, 用户不存在为null</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.GetUser">
            <summary>
            获取所有用户信息
            </summary>
            <remarks>
            GET: api/Users
            
            需要管理员及以上权限
            </remarks>
            <returns>若成功响应201并返回所有用户信息; 若失败响应404(数据库表为空), 400(授权失败)</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.GetUser(System.Int64)">
            <summary>
            获取指定id用户信息
            </summary>
            <remarks>
            GET: api/Users/5
            
            需要管理员及以上权限
            </remarks>
            <returns>若成功响应201并返回所有用户信息; 若失败响应404(数据库表为空), 400(授权失败)</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.Info">
            <summary>
            获取用户本人信息
            </summary>
            <remarks>
            POST: api/Users/Info
            </remarks>
            <returns>若成功响应201并返回用户信息(隐去密码和安全码), 若失败响应400(授权失败/数据库表为空), 404(用户不存在)</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.PlayList">
            <summary>
            获取用户歌单列表
            </summary>
            <remarks>
            POST: api/Users/PlayList
            </remarks>
            <returns>若成功响应201并返回用户歌单列表, 若失败响应400(授权失败/数据库表为空), 404(用户不存在)</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.Regist(System.String,System.String,System.String,System.String)">
            <summary>
            用户注册
            </summary>
            <remarks>
            POST: api/Users/Regist
            
            允许匿名访问
            
            FormData形式传参
            
            可选: securityKey 用于确定注册用户权限
            
            若成功将响应201并返回用户信息; 若失败返回500(格式错误), 400(邮箱已存在/数据库表为空)
            
            </remarks>
            <param name="email">邮箱地址</param>
            <param name="name">用户名</param>
            <param name="password">密码</param>
            <param name="securityKey">安全代码</param>
            <returns>若成功将响应201并返回用户信息; 若失败返回500(格式错误), 400(邮箱已存在/数据库表为空)</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.FindBackPassword(System.String,System.String,System.String)">
            <summary>
            找回密码
            </summary>
            <remarks>
            POST: api/Users/FindBackPassword
            
            允许匿名访问
            
            FormData形式传输
            
            若成功响应201并返回用户信息; 若失败返回500(格式错误), 400(安全代码错误), 404(用户不存在)
            
            </remarks>
            <param name="email">邮箱地址</param>
            <param name="newPassword">新密码</param>
            <param name="securityKey">安全代码</param>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.ChangePassword(System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <remarks>
            POST: api/Users/ChangePassword
            
            FormData形式传输
            
            若成功响应201并返回用户信息; 若失败返回500(格式错误), 400(安全代码错误), 404(用户不存在)
            
            </remarks>
            <param name="oldPassword">原始密码</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.RecentPlay(System.Int32)">
            <summary>
            获取用户按时间倒序的播放记录
            </summary>
            <remarks>
            POST: api/Users/RecentPlay
            </remarks>
            <param name="size">记录条数</param>
            <returns>最近size条记录, 若记录条数不足, 返回所有记录</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.ChangePassword(System.String)">
            <summary>
            修改用户名
            </summary>
            <remarks>
            POST: api/Users/ChangeUserName
            
            FormData形式传输
            
            若成功响应201并返回用户信息; 若失败返回500(格式错误), 400(安全代码错误), 404(用户不存在)
            
            </remarks>
            <param name="newName">新用户名</param>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.UserExists(System.String)">
            <summary>
            该邮箱地址的用户是否存在
            </summary>
            <param name="email">邮箱地址</param>
            <returns>用户是否存在</returns>
        </member>
        <member name="M:EMO_Cloud.Controllers.UsersController.GetUserId">
            <summary>
            copy from: https://stackoverflow.com/questions/50580232/get-userid-from-jwt-on-all-controller-methods
            </summary>
            <returns>当前Token的用户ID</returns>
        </member>
    </members>
</doc>
